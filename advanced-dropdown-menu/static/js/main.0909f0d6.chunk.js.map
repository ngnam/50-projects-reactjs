{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","children","NavItem","useState","open","setOpen","href","onClick","icon","DropdownMenu","activeMenu","SetActiveMenu","DropdownItem","goToMenu","leftIcon","rightIcon","CSSTransition","in","unmountOnExit","timeout","classNames","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yQAwBA,SAASA,EAAOC,GACd,OACE,qBAAKC,UAAU,SAAf,SACE,oBAAIA,UAAU,iBAAd,SAAgCD,EAAME,aAK5C,SAASC,EAAQH,GACf,MAAwBI,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAEA,OACE,qBAAIL,UAAU,WAAd,UACE,mBAAGM,KAAK,IAAIN,UAAU,cAAcO,QAAS,kBAAMF,GAASD,IAA5D,SACGL,EAAMS,OAERJ,GAAQL,EAAME,YAMrB,SAASQ,EAAaV,GACpB,MAAoCI,mBAAS,QAA7C,mBAAOO,EAAP,KAAmBC,EAAnB,KACA,EAAoCR,mBAAS,MAA7C,6BAOA,SAASS,EAAab,GACpB,OACE,oBAAGO,KAAK,IAAIN,UAAU,YAAYO,QAAS,kBAAMR,EAAMc,UAAYF,EAAcZ,EAAMc,WAAvF,UACE,sBAAMb,UAAU,cAAhB,SAA+BD,EAAMe,WACpCf,EAAME,SACP,sBAAMD,UAAU,aAAhB,SAA8BD,EAAMgB,eAK1C,OACE,sBAAKf,UAAU,WAAf,UACE,cAACgB,EAAA,EAAD,CACEC,GAAmB,SAAfP,EACJQ,eAAa,EACbC,QAAS,IACTC,WAAW,eAJb,SAKE,sBAAKpB,UAAU,OAAf,UACE,cAACY,EAAD,yBACA,cAACA,EAAD,CAAcE,SAAU,cAAC,IAAD,IAAWC,UAAW,cAAC,IAAD,IAAoBF,SAAS,WAA3E,2BAMJ,cAACG,EAAA,EAAD,CACEC,GAAmB,aAAfP,EACJQ,eAAa,EACbC,QAAS,IACTC,WAAW,iBAJb,SAKE,sBAAKpB,UAAU,OAAf,UACE,cAACY,EAAD,CAAcE,SAAU,cAAC,IAAD,IAAiBD,SAAS,SAClD,cAACD,EAAD,8BACA,cAACA,EAAD,CAAcE,SAAU,cAAC,IAAD,IAAxB,sBAGA,cAACF,EAAD,CAAcE,SAAU,cAAC,IAAD,IAAxB,sBAGA,cAACF,EAAD,CAAcE,SAAU,cAAC,IAAD,IAAxB,sBAGA,cAACF,EAAD,CAAcE,SAAU,cAAC,IAAD,IAAxB,sBAGA,cAACF,EAAD,CAAcE,SAAU,cAAC,IAAD,IAAxB,sBAGA,cAACF,EAAD,CAAcE,SAAU,cAAC,IAAD,IAAxB,sBAGA,cAACF,EAAD,CAAcE,SAAU,cAAC,IAAD,IAAxB,8BASKO,MA9Gf,WACE,OACE,eAACvB,EAAD,WACE,cAACI,EAAD,CAASM,KAAM,cAAC,IAAD,MACf,cAACN,EAAD,CAASM,KAAM,cAAC,IAAD,MACf,cAACN,EAAD,CAASM,KAAM,cAAC,IAAD,MAEf,cAACN,EAAD,CAASM,KAAM,cAAC,IAAD,IAAf,SAGE,cAACC,EAAD,UCHOa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0909f0d6.chunk.js","sourcesContent":["import './App.css';\nimport { FaPlus, FaMinus, FaMagic, FaChevronDown, FaCog, FaChevronRight, FaArrowLeft } from \"react-icons/fa\";\nimport React, { useState } from 'react';\nimport { CSSTransition } from 'react-transition-group';\n\nfunction App() {\n  return (\n    <Navbar>\n      <NavItem icon={<FaPlus />} />\n      <NavItem icon={<FaMinus />} />\n      <NavItem icon={<FaMagic />} />\n\n      <NavItem icon={<FaChevronDown />}>\n        {/* DROP down menu  */}\n\n        <DropdownMenu />\n\n      </NavItem>\n\n\n    </Navbar>\n  );\n}\n\nfunction Navbar(props) {\n  return (\n    <nav className=\"navbar\">\n      <ul className=\"nav navbar-nav\">{props.children}</ul>\n    </nav>\n  );\n}\n\nfunction NavItem(props) {\n  const [open, setOpen] = useState(false);\n\n  return (\n    <li className=\"nav-item\">\n      <a href=\"#\" className=\"icon-button\" onClick={() => setOpen(!open)}>\n        {props.icon}\n      </a>\n      {open && props.children}\n\n    </li>\n  );\n}\n\nfunction DropdownMenu(props) {\n  const [activeMenu, SetActiveMenu] = useState('main');\n  const [menuHeight, SetMenuHeight] = useState(null);\n\n  function calcHeight(el) {\n    const height = el.offsetHeight;\n    SetMenuHeight(height);\n  }\n\n  function DropdownItem(props) {\n    return (\n      <a href=\"#\" className=\"menu-item\" onClick={() => props.goToMenu && SetActiveMenu(props.goToMenu)}>\n        <span className=\"icon-button\">{props.leftIcon}</span>\n        {props.children}\n        <span className=\"icon-right\">{props.rightIcon}</span>\n      </a>\n    );\n  }\n\n  return (\n    <div className=\"dropdown\">\n      <CSSTransition\n        in={activeMenu === 'main'}\n        unmountOnExit\n        timeout={500}\n        classNames=\"menu-primary\">\n        <div className=\"menu\">\n          <DropdownItem>My Profile</DropdownItem>\n          <DropdownItem leftIcon={<FaCog />} rightIcon={<FaChevronRight />} goToMenu=\"settings\">\n            Settings\n          </DropdownItem>\n        </div>\n      </CSSTransition>\n\n      <CSSTransition\n        in={activeMenu === 'settings'}\n        unmountOnExit\n        timeout={500}\n        classNames=\"menu-secondary\">\n        <div className=\"menu\">\n          <DropdownItem leftIcon={<FaArrowLeft />} goToMenu=\"main\"></DropdownItem>\n          <DropdownItem>Change password</DropdownItem>\n          <DropdownItem leftIcon={<FaCog />} >\n            settings\n          </DropdownItem>\n          <DropdownItem leftIcon={<FaCog />} >\n            settings\n          </DropdownItem>\n          <DropdownItem leftIcon={<FaCog />} >\n            settings\n          </DropdownItem>\n          <DropdownItem leftIcon={<FaCog />} >\n            settings\n          </DropdownItem>\n          <DropdownItem leftIcon={<FaCog />} >\n            settings\n          </DropdownItem>\n          <DropdownItem leftIcon={<FaCog />} >\n            settings\n          </DropdownItem>\n          <DropdownItem leftIcon={<FaCog />} >\n            settings\n          </DropdownItem>\n        </div>\n      </CSSTransition>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}